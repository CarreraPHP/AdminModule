{"version":3,"sources":["login-modal.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAA,eAAA,CAAA;AACpB,OAAO,EAAE,QAAA,EAAsB,MAAA,4BAAA,CAAA;AAE/B,OAAO,EAAE,sBAAA,EAAuB,MAAA,mBAAA,CAAA;AAChC,MAEC;IAAD;;OAEG;IACH,YAAgB,YAAc;QAAd,iBAAA,GAAA,YAAA,CAAc;QAFlB,WAAA,GAAS,KAAA,CAAM;IAIpB,CAAC;IACR;;OAEG;IACH,IAHK;QAIG,IAAI,IAHC,CAAI,MAAC,EAAO;YAIb,OAAO;SACV;QACD,IAAI,CAHC,MAAC,GAAQ,IAAA,CAAK;QAInB,MAAM,gBAAgB,CAHhB,QAAA,GAAW,IAAA,CAAK,YAAC,CAAY,IAAC,CAAI,sBAAC,EAAuB;YAI5D,SAAS,EAHE,KAAA;SAId,CAHC,CAAC;QAIH,QAAQ,CAHC,MAAC,CAAM,IAAC,CAAI,CAAC,MAAC,EAAO,EAAA;YAI1B,IAAI,CAHC,MAAC,GAAQ,KAAA,CAAM;QAIxB,CAAC,EAHE,CAAA,MAAE,EAAO,EAAA;YAIR,IAAI,CAHC,MAAC,GAAQ,KAAA,CAAM;QAIxB,CAAC,CAHC,CAAC;QAIH,OAHO,QAAA,CAAS;IAIpB,CAAC;;AAFE,4BAAA,GAAoC;IAI3C,EAHE,IAAA,EAAM,UAAA,EAAW;CAIlB,CAHC;AAIF;;GAEG;AAJF,gCAAA,GAAA,GAAA,EAAA,CAAA;IAMD,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,CAAC;AAGF;IACA,gBAAgB;IAChB,iBAAiB,CAAC,UAAU,CAAC;IAC7B;;;OAGG;IACH,iBAAiB,CAAC,cAAc,CAAC;IACjC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC;IACnC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,YAAY,CAAC;AACzC,CAAC","file":"login-modal.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { JhiLoginModalComponent } from './login.component';\nexport class LoginModalService {\nprivate isOpen = false;\n/**\n * @param {?} modalService\n */\nconstructor(\nprivate modalService: NgbModal,\n    ) {}\n/**\n * @return {?}\n */\nopen(): NgbModalRef {\n        if (this.isOpen) {\n            return;\n        }\n        this.isOpen = true;\n        const /** @type {?} */ modalRef = this.modalService.open(JhiLoginModalComponent, {\n            container: 'nav'\n        });\n        modalRef.result.then((result) => {\n            this.isOpen = false;\n        }, (reason) => {\n            this.isOpen = false;\n        });\n        return modalRef;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbModal, },\n];\n}\n\nfunction LoginModalService_tsickle_Closure_declarations() {\n/** @type {?} */\nLoginModalService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoginModalService.ctorParameters;\n/** @type {?} */\nLoginModalService.prototype.isOpen;\n/** @type {?} */\nLoginModalService.prototype.modalService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}