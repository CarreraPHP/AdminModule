{"version":3,"sources":["language.helper.ts"],"names":[],"mappings":"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","file":"language.helper.js","sourceRoot":"","sourcesContent":["import { Injectable, RendererFactory2, Renderer2 } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\nimport { LANGUAGES } from './language.constants';\nimport { FindLanguageFromKeyPipe } from './find-language-from-key.pipe';\nexport class JhiLanguageHelper {\n    renderer: Renderer2 = null;\n/**\n * @param {?} translateService\n * @param {?} rootRenderer\n * @param {?} findLanguageFromKeyPipe\n * @param {?} titleService\n * @param {?} router\n */\nconstructor(\nprivate translateService: TranslateService,\nprivate rootRenderer: RendererFactory2,\nprivate findLanguageFromKeyPipe: FindLanguageFromKeyPipe,\nprivate titleService: Title,\nprivate router: Router\n    ) {\n        this.renderer = rootRenderer.createRenderer(document.querySelector('html'), null);\n        this.init();\n    }\n/**\n * @return {?}\n */\ngetAll(): Promise<any> {\n        return Promise.resolve(LANGUAGES);\n    }\n/**\n * Update the window title using params in the following\n * order:\n * 1. titleKey parameter\n * 2. $state.$current.data.pageTitle (current state page title)\n * 3. 'global.title'\n * @param {?=} titleKey\n * @return {?}\n */\nupdateTitle(titleKey?: string) {\n        if (!titleKey) {\n             titleKey = this.getPageTitle(this.router.routerState.snapshot.root);\n        }\n\n        this.translateService.get(titleKey).subscribe((title) => {\n            this.titleService.setTitle(title);\n        });\n    }\n/**\n * @return {?}\n */\nprivate init() {\n        this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n            this.renderer.setAttribute(document.querySelector('html'), 'lang', this.translateService.currentLang);\n            this.updateTitle();\n            this.updatePageDirection();\n        });\n    }\n/**\n * @param {?} routeSnapshot\n * @return {?}\n */\nprivate getPageTitle(routeSnapshot: ActivatedRouteSnapshot) {\n        let /** @type {?} */ title: string = (routeSnapshot.data && routeSnapshot.data['pageTitle']) ? routeSnapshot.data['pageTitle'] : 'externalModuleProjectApp';\n        if (routeSnapshot.firstChild) {\n            title = this.getPageTitle(routeSnapshot.firstChild) || title;\n        }\n        return title;\n    }\n/**\n * @return {?}\n */\nprivate updatePageDirection() {\n        this.renderer.setAttribute(document.querySelector('html'), 'dir', this.findLanguageFromKeyPipe.isRTL(this.translateService.currentLang) ? 'rtl' : 'ltr');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslateService, },\n{type: RendererFactory2, },\n{type: FindLanguageFromKeyPipe, },\n{type: Title, },\n{type: Router, },\n];\n}\n\nfunction JhiLanguageHelper_tsickle_Closure_declarations() {\n/** @type {?} */\nJhiLanguageHelper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJhiLanguageHelper.ctorParameters;\n/** @type {?} */\nJhiLanguageHelper.prototype.renderer;\n/** @type {?} */\nJhiLanguageHelper.prototype.translateService;\n/** @type {?} */\nJhiLanguageHelper.prototype.rootRenderer;\n/** @type {?} */\nJhiLanguageHelper.prototype.findLanguageFromKeyPipe;\n/** @type {?} */\nJhiLanguageHelper.prototype.titleService;\n/** @type {?} */\nJhiLanguageHelper.prototype.router;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}