{"version":3,"sources":["alert-error.component.ts"],"names":[],"mappings":"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","file":"alert-error.component.js","sourceRoot":"","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { JhiEventManager, JhiAlertService } from 'ng-jhipster';\nimport { Subscription } from 'rxjs/Rx';\nexport class JhiAlertErrorComponent implements OnDestroy {\n\n    alerts: any[];\n    cleanHttpErrorListener: Subscription;\n/**\n * @param {?} alertService\n * @param {?} eventManager\n * @param {?} translateService\n */\nconstructor(private alertService: JhiAlertService,\nprivate eventManager: JhiEventManager,\nprivate translateService: TranslateService) {\n        this.alerts = [];\n\n        this.cleanHttpErrorListener = eventManager.subscribe('externalModuleProjectApp.httpError', (response) => {\n            let i;\n            const httpResponse = response.content;\n            switch (httpResponse.status) {\n                // connection refused, server not reachable\n                case 0:\n                    this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n                    break;\n\n                case 400:\n                    const arr = Array.from(httpResponse.headers._headers);\n                    const headers = [];\n                    for (i = 0; i < arr.length; i++) {\n                        if (arr[i][0].endsWith('app-error') || arr[i][0].endsWith('app-params')) {\n                            headers.push(arr[i][0]);\n                        }\n                    }\n                    headers.sort();\n                    let errorHeader = null;\n                    let entityKey = null;\n                    if (headers.length > 1) {\n                        errorHeader = httpResponse.headers.get(headers[0]);\n                        entityKey = httpResponse.headers.get(headers[1]);\n                    }\n                    if (errorHeader) {\n                        const entityName = translateService.instant('global.menu.entities.' + entityKey);\n                        this.addErrorAlert(errorHeader, errorHeader, { entityName });\n                    } else if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().fieldErrors) {\n                        const fieldErrors = httpResponse.json().fieldErrors;\n                        for (i = 0; i < fieldErrors.length; i++) {\n                            const fieldError = fieldErrors[i];\n                            // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                            const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                            const fieldName = translateService.instant('externalModuleProjectApp.' +\n                                fieldError.objectName + '.' + convertedField);\n                            this.addErrorAlert(\n                                'Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName });\n                        }\n                    } else if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().message) {\n                        this.addErrorAlert(httpResponse.json().message, httpResponse.json().message, httpResponse.json().params);\n                    } else {\n                        this.addErrorAlert(httpResponse.text());\n                    }\n                    break;\n\n                case 404:\n                    this.addErrorAlert('Not found', 'error.url.not.found');\n                    break;\n\n                default:\n                    if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().message) {\n                        this.addErrorAlert(httpResponse.json().message);\n                    } else {\n                        this.addErrorAlert(httpResponse.text());\n                    }\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {\n            this.eventManager.destroy(this.cleanHttpErrorListener);\n            this.alerts = [];\n        }\n    }\n/**\n * @param {?} message\n * @param {?=} key\n * @param {?=} data\n * @return {?}\n */\naddErrorAlert(message, key?, data?) {\n        key = (key && key !== null) ? key : message;\n        this.alerts.push(\n            this.alertService.addAlert(\n                {\n                    type: 'danger',\n                    msg: key,\n                    params: data,\n                    timeout: 5000,\n                    toast: this.alertService.isToast(),\n                    scoped: true\n                },\n                this.alerts\n            )\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'jhi-alert-error',\n    template: `\n        <div class=\"alerts\" role=\"alert\">\n            <div *ngFor=\"let alert of alerts\"  [ngClass]=\"{\\'alert.position\\': true, \\'toast\\': alert.toast}\">\n                <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"alert.close(alerts)\">\n                    <pre [innerHTML]=\"alert.msg\"></pre>\n                </ngb-alert>\n            </div>\n        </div>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JhiAlertService, },\n{type: JhiEventManager, },\n{type: TranslateService, },\n];\n}\n\nfunction JhiAlertErrorComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nJhiAlertErrorComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJhiAlertErrorComponent.ctorParameters;\n/** @type {?} */\nJhiAlertErrorComponent.prototype.alerts;\n/** @type {?} */\nJhiAlertErrorComponent.prototype.cleanHttpErrorListener;\n/** @type {?} */\nJhiAlertErrorComponent.prototype.alertService;\n/** @type {?} */\nJhiAlertErrorComponent.prototype.eventManager;\n/** @type {?} */\nJhiAlertErrorComponent.prototype.translateService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}