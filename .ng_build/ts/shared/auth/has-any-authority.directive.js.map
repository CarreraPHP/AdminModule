{"version":3,"sources":["has-any-authority.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,WAAA,EAAa,gBAAA,EAAiB,MAAA,eAAA,CAAA;AACzD,OAAO,EAAE,SAAA,EAAU,MAAA,qBAAA,CAAA;AACnB;;;;;;;;;;GAUG;AACH,MAEC;IAAD;;;;OAIG;IACH,YADwB,SAAW,EAAmB,WAA6B,EAAU,gBAAkB;QAAvF,cAAA,GAAA,SAAA,CAAW;QAAmB,gBAAA,GAAA,WAAA,CAA6B;QAAU,qBAAA,GAAA,gBAAA,CAAkB;IAI3G,CAAC;IACL;;;OAGG;IACH,IALK,kBAAA,CAAA,KAAA;QAMG,IAAI,CALC,WAAC,GAAa,OAAO,KAAA,KAAU,QAAA,CAAS,CAAA,CAAE,CAAA,gBAAA,CAAA,CAAW,KAAA,CAAA,CAAM,CAAE,CAAA,CAAA,gBAAA,CAAA,CAAa,KAAA,CAAA,CAAM;QAMrF,IAAI,CALC,UAAC,EAAU,CAAE;QAMlB,uDAAuD;QACvD,IAAI,CALC,SAAC,CAAS,sBAAC,EAAsB,CAAE,SAAC,CAAS,CAAC,QAAC,EAAS,EAAA,CAAG,IAAA,CAAK,UAAC,EAAU,CAAE,CAAC;IAMvF,CAAC;IACL;;OAEG;IANE,UAAA;QAQG,IAAI,CAPC,SAAC,CAAS,eAAC,CAAe,IAAC,CAAI,WAAC,CAAW,CAAC,IAAC,CAAI,CAAC,MAAC,EAAO,EAAA;YAQ3D,IAAI,CAPC,gBAAC,CAAgB,KAAC,EAAK,CAAE;YAQ9B,IAAI,MAPC,EAAO;gBAQR,IAAI,CAPC,gBAAC,CAAgB,kBAAC,CAAkB,IAAC,CAAI,WAAC,CAAW,CAAC;aAQ9D;QACL,CAAC,CAPC,CAAC;IAQP,CAAC;;AANE,mCAAA,GAAoC;IAQ3C,EAPE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAQrB,QAAQ,EAPE,sBAAA;aAQb,EAPC,EAAG;CAQJ,CAPC;AAQF;;GAVE;AAID,uCAAA,GAAA,GAAA,EAAA,CAAA;IAUD,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,WAAW,GAAG;IACrB,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,CAAC;AARK,uCAAA,GAAyD;IAUhE,oBAAoB,EATE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAUtC,CATC;AAYF;IACA,gBAAgB;IAChB,wBAAwB,CAAC,UAAU,CAAC;IACpC;;;OAGG;IACH,wBAAwB,CAAC,cAAc,CAAC;IACxC,gBAAgB;IAChB,wBAAwB,CAAC,cAAc,CAAC;IACxC,gBAAgB;IAChB,wBAAwB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC/C,gBAAgB;IAChB,wBAAwB,CAAC,SAAS,CAAC,SAAS,CAAC;IAC7C,gBAAgB;IAChB,wBAAwB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC/C,gBAAgB;IAChB,wBAAwB,CAAC,SAAS,CAAC,gBAAgB,CAAC;AACpD,CAAC","file":"has-any-authority.directive.js","sourceRoot":"","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Principal } from './principal.service';\n/**\n * \\@whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n * \n * \\@howToUse \n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n * \n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\nexport class HasAnyAuthorityDirective {\nprivate authorities: string[];\n/**\n * @param {?} principal\n * @param {?} templateRef\n * @param {?} viewContainerRef\n */\nconstructor(private principal: Principal,\nprivate templateRef: TemplateRef<any>,\nprivate viewContainerRef: ViewContainerRef) {\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset jhiHasAnyAuthority(value: string|string[]) {\n        this.authorities = typeof value === 'string' ? [ /** @type {?} */(( <string> value)) ] : /** @type {?} */(( <string[]> value));\n        this.updateView();\n        // Get notified each time authentication state changes.\n        this.principal.getAuthenticationState().subscribe((identity) => this.updateView());\n    }\n/**\n * @return {?}\n */\nprivate updateView(): void {\n        this.principal.hasAnyAuthority(this.authorities).then((result) => {\n            this.viewContainerRef.clear();\n            if (result) {\n                this.viewContainerRef.createEmbeddedView(this.templateRef);\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[jhiHasAnyAuthority]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Principal, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'jhiHasAnyAuthority': [{ type: Input },],\n};\n}\n\nfunction HasAnyAuthorityDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHasAnyAuthorityDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHasAnyAuthorityDirective.ctorParameters;\n/** @type {?} */\nHasAnyAuthorityDirective.propDecorators;\n/** @type {?} */\nHasAnyAuthorityDirective.prototype.authorities;\n/** @type {?} */\nHasAnyAuthorityDirective.prototype.principal;\n/** @type {?} */\nHasAnyAuthorityDirective.prototype.templateRef;\n/** @type {?} */\nHasAnyAuthorityDirective.prototype.viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}