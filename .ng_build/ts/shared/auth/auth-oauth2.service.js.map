{"version":3,"sources":["auth-oauth2.service.ts"],"names":[],"mappings":"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","file":"auth-oauth2.service.js","sourceRoot":"","sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { LocalStorageService } from 'ng2-webstorage';\n\nimport { SERVER_API_URL } from '../../app.constants';\nimport { JhiBase64Service } from 'ng-jhipster';\nexport class AuthServerProvider {\n/**\n * @param {?} http\n * @param {?} base64\n * @param {?} $localStorage\n */\nconstructor(\nprivate http: Http,\nprivate base64: JhiBase64Service,\nprivate $localStorage: LocalStorageService\n    ) {}\n/**\n * @return {?}\n */\ngetToken() {\n        return this.$localStorage.retrieve('authenticationToken');\n    }\n/**\n * @param {?} credentials\n * @return {?}\n */\nlogin(credentials): Observable<any> {\n        const /** @type {?} */ data = 'username=' +  encodeURIComponent(credentials.username) + '&password=' +\n            encodeURIComponent(credentials.password) + '&grant_type=password&scope=read%20write&' +\n            'client_secret=my-secret-token-to-change-in-production&client_id=ExternalModuleProjectapp';\n        const /** @type {?} */ headers = new Headers ({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.base64.encode('ExternalModuleProjectapp' + ':' + 'my-secret-token-to-change-in-production')\n        });\n\n        return this.http.post('oauth/token', data, {\n            headers\n        }).map(authSuccess.bind(this));\n/**\n * @param {?} resp\n * @return {?}\n */\nfunction authSuccess(resp) {\n            const /** @type {?} */ response = resp.json();\n            const /** @type {?} */ expiredAt = new Date();\n            expiredAt.setSeconds(expiredAt.getSeconds() + response.expires_in);\n            response.expires_at = expiredAt.getTime();\n            this.$localStorage.store('authenticationToken', response);\n            return response;\n        }\n    }\n/**\n * @return {?}\n */\nlogout(): Observable<any> {\n        return new Observable((observer) => {\n            this.http.post(SERVER_API_URL + 'api/logout', {});\n            this.$localStorage.clear('authenticationToken');\n            observer.complete();\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n{type: JhiBase64Service, },\n{type: LocalStorageService, },\n];\n}\n\nfunction AuthServerProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthServerProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthServerProvider.ctorParameters;\n/** @type {?} */\nAuthServerProvider.prototype.http;\n/** @type {?} */\nAuthServerProvider.prototype.base64;\n/** @type {?} */\nAuthServerProvider.prototype.$localStorage;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}