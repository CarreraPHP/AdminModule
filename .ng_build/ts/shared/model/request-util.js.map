{"version":3,"sources":["request-util.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAA,EAAiB,kBAAA,EAAmB,MAAA,eAAA,CAAA;AAE7C,MAAM,CAAC,MAAA,gBAAA,CAAM,mBAAA,GAAsB,CAAA,GAAO,EAAyB,EAAA;IAC/D,MAAM,gBAAgB,CAAhB,OAAA,GAA8B,IAAI,kBAAA,EAAmB,CAAE;IAC7D,IAAI,GAAC,EAAI;QACL,MAAM,gBAAgB,CAAhB,MAAA,GAA0B,IAAI,eAAA,EAAgB,CAAE;QACtD,MAAM,CAAC,GAAC,CAAG,MAAC,EAAO,GAAA,CAAI,IAAC,CAAI,CAAC;QAC7B,MAAM,CAAC,GAAC,CAAG,MAAC,EAAO,GAAA,CAAI,IAAC,CAAI,CAAC;QAC7B,IAAI,GAAC,CAAG,IAAC,EAAK;YACV,MAAM,CAAC,SAAC,CAAS,GAAC,CAAG,MAAC,EAAO,GAAA,CAAI,IAAC,CAAI,CAAC;SAC1C;QACD,MAAM,CAAC,GAAC,CAAG,OAAC,EAAQ,GAAA,CAAI,KAAC,CAAK,CAAC;QAE/B,OAAO,CAAC,MAAC,GAAQ,MAAA,CAAO;KAC3B;IACD,OAAO,OAAA,CAAQ;AACnB,CAAC,CAAC","file":"request-util.js","sourceRoot":"","sourcesContent":["import { URLSearchParams, BaseRequestOptions } from '@angular/http';\n\nexport const /** @type {?} */ createRequestOption = (req?: any): BaseRequestOptions => {\n    const /** @type {?} */ options: BaseRequestOptions = new BaseRequestOptions();\n    if (req) {\n        const /** @type {?} */ params: URLSearchParams = new URLSearchParams();\n        params.set('page', req.page);\n        params.set('size', req.size);\n        if (req.sort) {\n            params.paramsMap.set('sort', req.sort);\n        }\n        params.set('query', req.query);\n\n        options.params = params;\n    }\n    return options;\n};\n"]}