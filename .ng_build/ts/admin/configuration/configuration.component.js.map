{"version":3,"sources":["configuration.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAkB,MAAA,eAAA,CAAA;AAE3B,OAAO,EAAE,uBAAA,EAAwB,MAAA,yBAAA,CAAA;AACjC,MAEC;IAKD;;OAEG;IACH,YACgB,oBAAsB;QAAtB,yBAAA,GAAA,oBAAA,CAAsB;QAVlC,qBAAgB,GAEQ,IAAA,CAAK;QAD7B,kBAAa,GAEQ,IAAA,CAAK;QAStB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IACL;;;OAGG;IACH,IAHK,CAAA,IAAA;QAIG,OAHO,CAAA,IAAE,KAAQ,SAAA,CAAU,CAAC,CAAA,CAAE,EAAA,CAAG,CAAA,CAAE,MAAA,CAAO,IAAC,CAAI,IAAC,CAAI,CAAC;IAIzD,CAAC;IACL;;OAEG;IACH,QALK;QAMG,IAAI,CALC,oBAAC,CAAoB,GAAC,EAAG,CAAE,SAAC,CAAS,CAAC,aAAC,EAAc,EAAA;YAMtD,IAAI,CALC,aAAC,GAAe,aAAA,CAAc;YAOnC,KAAK,MALC,gBAAA,CAAK,MAAA,IAAU,aAAA,EAAe;gBAMhC,IAAI,MALC,CAAM,UAAC,KAAc,SAAA,EAAW;oBAMjC,IAAI,CALC,UAAC,CAAU,IAAC,CAAI,MAAC,CAAM,IAAC,CAAI,MAAC,CAAM,UAAC,CAAU,CAAC,CAAC;iBAMxD;aACJ;QACL,CAAC,CALC,CAAC;QAOH,IAAI,CALC,oBAAC,CAAoB,MAAC,EAAM,CAAE,SAAC,CAAS,CAAC,aAAC,EAAc,EAAA;YAMzD,IAAI,CALC,gBAAC,GAAkB,aAAA,CAAc;QAM1C,CAAC,CALC,CAAC;IAMP,CAAC;;AAJE,oCAAA,GAAoC;IAM3C,EALE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAMrB,QAAQ,EALE,mBAAA;gBAMV,QAAQ,EALE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoDT;aACJ,EALC,EAAG;CAMJ,CALC;AAMF;;GAEG;AANF,wCAAA,GAAA,GAAA,EAAA,CAAA;IAQD,EAAC,IAAI,EAAE,uBAAuB,GAAG;CAChC,CAAC;AAGF;IACA,gBAAgB;IAChB,yBAAyB,CAAC,UAAU,CAAC;IACrC;;;OAGG;IACH,yBAAyB,CAAC,cAAc,CAAC;IACzC,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACrD,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,aAAa,CAAC;IAClD,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,UAAU,CAAC;IAC/C,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,MAAM,CAAC;IAC3C,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,SAAS,CAAC;IAC9C,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,OAAO,CAAC;IAC5C,gBAAgB;IAChB,yBAAyB,CAAC,SAAS,CAAC,oBAAoB,CAAC;AACzD,CAAC","file":"configuration.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { JhiConfigurationService } from './configuration.service';\nexport class JhiConfigurationComponent implements OnInit {\n    allConfiguration: any = null;\n    configuration: any = null;\n    configKeys: any[];\n    filter: string;\n    orderProp: string;\n    reverse: boolean;\n/**\n * @param {?} configurationService\n */\nconstructor(\nprivate configurationService: JhiConfigurationService\n    ) {\n        this.configKeys = [];\n        this.filter = '';\n        this.orderProp = 'prefix';\n        this.reverse = false;\n    }\n/**\n * @param {?} dict\n * @return {?}\n */\nkeys(dict): Array<string> {\n        return (dict === undefined) ? [] : Object.keys(dict);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.configurationService.get().subscribe((configuration) => {\n            this.configuration = configuration;\n\n            for (const /** @type {?} */ config of configuration) {\n                if (config.properties !== undefined) {\n                    this.configKeys.push(Object.keys(config.properties));\n                }\n            }\n        });\n\n        this.configurationService.getEnv().subscribe((configuration) => {\n            this.allConfiguration = configuration;\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'jhi-configuration',\n    template: `\n      <div *ngIf=\"allConfiguration && configuration\">\n          <h2 jhiTranslate=\"configuration.title\">Configuration</h2>\n\n          <span jhiTranslate=\"configuration.filter\">Filter (by prefix)</span> <input type=\"text\" [(ngModel)]=\"filter\" class=\"form-control\">\n          <label>Spring configuration</label>\n          <table class=\"table table-striped table-bordered table-responsive d-table\">\n              <thead>\n              <tr>\n                  <th class=\"w-40\" (click)=\"orderProp = 'prefix'; reverse=!reverse\"><span jhiTranslate=\"configuration.table.prefix\">Prefix</span></th>\n                  <th class=\"w-60\" (click)=\"orderProp = 'properties'; reverse=!reverse\"><span jhiTranslate=\"configuration.table.properties\">Properties</span></th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr *ngFor=\"let entry of (configuration | pureFilter:filter:'prefix' | orderBy:orderProp:reverse)\">\n                  <td><span>{{entry.prefix}}</span></td>\n                  <td>\n                      <div class=\"row\" *ngFor=\"let key of keys(entry.properties)\">\n                          <div class=\"col-md-4\">{{key}}</div>\n                          <div class=\"col-md-8\">\n                              <span class=\"float-right break\">{{entry.properties[key] | json}}</span>\n                          </div>\n                      </div>\n                  </td>\n              </tr>\n              </tbody>\n          </table>\n          <div *ngFor=\"let key of keys(allConfiguration)\">\n              <label><span>{{key}}</span></label>\n              <table class=\"table table-sm table-striped table-bordered table-responsive d-table\">\n                  <thead>\n                  <tr>\n                      <th class=\"w-40\">Property</th>\n                      <th class=\"w-60\">Value</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr *ngFor=\"let item of allConfiguration[key]\">\n                      <td class=\"break\">{{item.key}}</td>\n                      <td class=\"break\">\n                          <span class=\"float-right break\">{{item.val}}</span>\n                      </td>\n                  </tr>\n                  </tbody>\n              </table>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JhiConfigurationService, },\n];\n}\n\nfunction JhiConfigurationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nJhiConfigurationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJhiConfigurationComponent.ctorParameters;\n/** @type {?} */\nJhiConfigurationComponent.prototype.allConfiguration;\n/** @type {?} */\nJhiConfigurationComponent.prototype.configuration;\n/** @type {?} */\nJhiConfigurationComponent.prototype.configKeys;\n/** @type {?} */\nJhiConfigurationComponent.prototype.filter;\n/** @type {?} */\nJhiConfigurationComponent.prototype.orderProp;\n/** @type {?} */\nJhiConfigurationComponent.prototype.reverse;\n/** @type {?} */\nJhiConfigurationComponent.prototype.configurationService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}