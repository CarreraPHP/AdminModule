{"__symbolic":"module","version":3,"metadata":{"AuditsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-audit","template":"\n    <div *ngIf=\"audits\">\n        <h2 jhiTranslate=\"audits.title\">Audits</h2>\n\n        <div class=\"row\">\n            <div class=\"col-md-5\">\n                <h4 jhiTranslate=\"audits.filter.title\">Filter by date</h4>\n                <p class=\"d-flex\">\n                    <span jhiTranslate=\"audits.filter.from\" class=\"input-group-addon\">from</span>\n                    <input type=\"date\" class=\"form-control\" name=\"start\" [(ngModel)]=\"fromDate\" (ngModelChange)=\"onChangeDate($event)\" required/>\n                    <span jhiTranslate=\"audits.filter.to\" class=\"input-group-addon\">to</span>\n                    <input type=\"date\" class=\"form-control\" name=\"end\" [(ngModel)]=\"toDate\" (ngModelChange)=\"onChangeDate($event)\" required/>\n                </p>\n            </div>\n        </div>\n\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-striped table-bordered\">\n                <thead>\n                <tr>\n                    <th (click)=\"orderProp = 'timestamp'; reverse=!reverse\"><span jhiTranslate=\"audits.table.header.date\">Date</span></th>\n                    <th (click)=\"orderProp = 'principal'; reverse=!reverse\"><span jhiTranslate=\"audits.table.header.principal\">User</span></th>\n                    <th (click)=\"orderProp = 'type'; reverse=!reverse\"><span jhiTranslate=\"audits.table.header.status\">State</span></th>\n                    <th (click)=\"orderProp = 'data.message'; reverse=!reverse\"><span jhiTranslate=\"audits.table.header.data\">Extra data</span></th>\n                </tr>\n                </thead>\n                <tr *ngFor=\"let audit of getAudits()\">\n                    <td><span>{{audit.timestamp| date:'medium'}}</span></td>\n                    <td><small>{{audit.principal}}</small></td>\n                    <td>{{audit.type}}</td>\n                    <td>\n                        <span *ngIf=\"audit.data\" ng-show=\"audit.data.message\">{{audit.data.message}}</span>\n                        <span *ngIf=\"audit.data\" ng-show=\"audit.data.remoteAddress\"><span jhiTranslate=\"audits.table.data.remoteAddress\">Remote Address</span> {{audit.data.remoteAddress}}</span>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div *ngIf=\"audits\">\n            <div class=\"row justify-content-center\">\n                <jhi-item-count [page]=\"page\" [total]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            </div>\n            <div class=\"row justify-content-center\">\n                <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" (pageChange)=\"loadPage(page)\"></ngb-pagination>\n            </div>\n        </div>\n    </div>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"AuditsService"},{"__symbolic":"reference","module":"ng-jhipster","name":"JhiParseLinks"},{"__symbolic":"reference","name":"Éµa"},{"__symbolic":"reference","module":"@angular/common","name":"DatePipe"}]}],"getAudits":[{"__symbolic":"method"}],"loadPage":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"onChangeDate":[{"__symbolic":"method"}],"previousMonth":[{"__symbolic":"method"}],"today":[{"__symbolic":"method"}],"sortAudits":[{"__symbolic":"method"}]}},"AuditsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"}]}],"query":[{"__symbolic":"method"}]}},"auditsRoute":{"path":"audits","component":{"__symbolic":"reference","name":"AuditsComponent"},"data":{"pageTitle":"audits.title"}},"Audit":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"AuditData"},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"string"}]}]}},"AuditData":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"string"}]}]}},"JhiConfigurationComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-configuration","template":"\n      <div *ngIf=\"allConfiguration && configuration\">\n          <h2 jhiTranslate=\"configuration.title\">Configuration</h2>\n\n          <span jhiTranslate=\"configuration.filter\">Filter (by prefix)</span> <input type=\"text\" [(ngModel)]=\"filter\" class=\"form-control\">\n          <label>Spring configuration</label>\n          <table class=\"table table-striped table-bordered table-responsive d-table\">\n              <thead>\n              <tr>\n                  <th class=\"w-40\" (click)=\"orderProp = 'prefix'; reverse=!reverse\"><span jhiTranslate=\"configuration.table.prefix\">Prefix</span></th>\n                  <th class=\"w-60\" (click)=\"orderProp = 'properties'; reverse=!reverse\"><span jhiTranslate=\"configuration.table.properties\">Properties</span></th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr *ngFor=\"let entry of (configuration | pureFilter:filter:'prefix' | orderBy:orderProp:reverse)\">\n                  <td><span>{{entry.prefix}}</span></td>\n                  <td>\n                      <div class=\"row\" *ngFor=\"let key of keys(entry.properties)\">\n                          <div class=\"col-md-4\">{{key}}</div>\n                          <div class=\"col-md-8\">\n                              <span class=\"float-right break\">{{entry.properties[key] | json}}</span>\n                          </div>\n                      </div>\n                  </td>\n              </tr>\n              </tbody>\n          </table>\n          <div *ngFor=\"let key of keys(allConfiguration)\">\n              <label><span>{{key}}</span></label>\n              <table class=\"table table-sm table-striped table-bordered table-responsive d-table\">\n                  <thead>\n                  <tr>\n                      <th class=\"w-40\">Property</th>\n                      <th class=\"w-60\">Value</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr *ngFor=\"let item of allConfiguration[key]\">\n                      <td class=\"break\">{{item.key}}</td>\n                      <td class=\"break\">\n                          <span class=\"float-right break\">{{item.val}}</span>\n                      </td>\n                  </tr>\n                  </tbody>\n              </table>\n          </div>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"JhiConfigurationService"}]}],"keys":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"JhiConfigurationService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"}]}],"get":[{"__symbolic":"method"}],"getEnv":[{"__symbolic":"method"}]}},"configurationRoute":{"path":"jhi-configuration","component":{"__symbolic":"reference","name":"JhiConfigurationComponent"},"data":{"pageTitle":"configuration.title"}},"JhiDocsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-docs","template":"\n      <iframe src=\"swagger-ui/index.html\" width=\"100%\" height=\"900\" seamless\n          target=\"_top\" title=\"Swagger UI\" class=\"border-0\"></iframe>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"docsRoute":{"path":"docs","component":{"__symbolic":"reference","name":"JhiDocsComponent"},"data":{"pageTitle":"global.menu.admin.apidocs"}},"JhiHealthCheckComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-health","template":"\n      <div>\n          <h2>\n              <span jhiTranslate=\"health.title\">Health Checks</span>\n              <button class=\"btn btn-primary float-right\" (click)=\"refresh()\">\n                  <span class=\"fa fa-refresh\"></span> <span jhiTranslate=\"health.refresh.button\">Refresh</span>\n              </button>\n          </h2>\n          <div class=\"table-responsive\">\n              <table id=\"healthCheck\" class=\"table table-striped\">\n                  <thead>\n                      <tr>\n                          <th jhiTranslate=\"health.table.service\">Service Name</th>\n                          <th class=\"text-center\" jhiTranslate=\"health.table.status\">Status</th>\n                          <th class=\"text-center\" jhiTranslate=\"health.details.details\">Details</th>\n                      </tr>\n                  </thead>\n                  <tbody>\n                      <tr *ngFor=\"let health of healthData\">\n                          <td>{{'health.indicator.' + baseName(health.name) | translate}} {{subSystemName(health.name)}}</td>\n                          <td class=\"text-center\">\n                              <span class=\"badge\" [ngClass]=\"getBadgeClass(health.status)\" jhiTranslate=\"{{'health.status.' + health.status}}\">\n                                  {{health.status}}\n                              </span>\n                          </td>\n                          <td class=\"text-center\">\n                              <a class=\"hand\" (click)=\"showHealth(health)\" *ngIf=\"health.details || health.error\">\n                                  <i class=\"fa fa-eye\"></i>\n                              </a>\n                          </td>\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModal"},{"__symbolic":"reference","name":"JhiHealthService"}]}],"ngOnInit":[{"__symbolic":"method"}],"baseName":[{"__symbolic":"method"}],"getBadgeClass":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}],"showHealth":[{"__symbolic":"method"}],"subSystemName":[{"__symbolic":"method"}]}},"JhiHealthModalComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-health-modal","template":"\n      <div class=\"modal-header\">\n          <h4 class=\"modal-title\" id=\"showHealthLabel\">\n      \t\t{{'health.indicator.' + baseName(currentHealth.name) | translate}}\n              {{subSystemName(currentHealth.name)}}\n          </h4>\n          <button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" (click)=\"activeModal.dismiss('closed')\"><span aria-hidden=\"true\">&times;</span>\n          </button>\n      </div>\n      <div class=\"modal-body pad\">\n          <div *ngIf=\"currentHealth.details\">\n              <h5 jhiTranslate=\"health.details.properties\">Properties</h5>\n              <div class=\"table-responsive\">\n                  <table class=\"table table-striped\">\n                      <thead>\n                          <tr>\n                              <th class=\"text-left\" jhiTranslate=\"health.details.name\">Name</th>\n                              <th class=\"text-left\" jhiTranslate=\"health.details.value\">Value</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          <tr *ngFor=\"let entry of currentHealth.details | keys\">\n                              <td class=\"text-left\">{{entry.key}}</td>\n                              <td class=\"text-left\">{{readableValue(entry.value)}}</td>\n                          </tr>\n                      </tbody>\n                  </table>\n              </div>\n          </div>\n          <div *ngIf=\"currentHealth.error\">\n              <h4 jhiTranslate=\"health.details.error\">Error</h4>\n                  <pre>{{currentHealth.error}}</pre>\n          </div>\n      </div>\n      <div class=\"modal-footer\">\n          <button data-dismiss=\"modal\" class=\"btn btn-secondary float-left\" type=\"button\" (click)=\"activeModal.dismiss('closed')\">Done</button>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"JhiHealthService"},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbActiveModal"}]}],"baseName":[{"__symbolic":"method"}],"subSystemName":[{"__symbolic":"method"}],"readableValue":[{"__symbolic":"method"}]}},"JhiHealthService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"}]}],"checkHealth":[{"__symbolic":"method"}],"transformHealthData":[{"__symbolic":"method"}],"getBaseName":[{"__symbolic":"method"}],"getSubSystemName":[{"__symbolic":"method"}],"addHealthObject":[{"__symbolic":"method"}],"flattenHealthData":[{"__symbolic":"method"}],"getModuleName":[{"__symbolic":"method"}],"hasSubSystem":[{"__symbolic":"method"}],"isHealthObject":[{"__symbolic":"method"}]}},"healthRoute":{"path":"jhi-health","component":{"__symbolic":"reference","name":"JhiHealthCheckComponent"},"data":{"pageTitle":"health.title"}},"LogsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-logs","template":"\n      <div class=\"table-responsive\" *ngIf=\"loggers\">\n          <h2 jhiTranslate=\"logs.title\">Logs</h2>\n\n          <p jhiTranslate=\"logs.nbloggers\" translateValues=\"{total: '{{ loggers.length }}'}\">There are {{ loggers.length }} loggers.</p>\n\n          <span jhiTranslate=\"logs.filter\">Filter</span> <input type=\"text\" [(ngModel)]=\"filter\" class=\"form-control\">\n\n          <table class=\"table table-sm table-striped table-bordered\">\n              <thead>\n              <tr title=\"click to order\">\n                  <th (click)=\"orderProp = 'name'; reverse=!reverse\"><span jhiTranslate=\"logs.table.name\">Name</span></th>\n                  <th (click)=\"orderProp = 'level'; reverse=!reverse\"><span jhiTranslate=\"logs.table.level\">Level</span></th>\n              </tr>\n              </thead>\n\n              <tr *ngFor=\"let logger of (loggers | pureFilter:filter:'name' | orderBy:orderProp:reverse)\">\n                  <td><small>{{logger.name | slice:0:140}}</small></td>\n                  <td>\n                      <button (click)=\"changeLevel(logger.name, 'TRACE')\" [ngClass]=\"(logger.level=='TRACE') ? 'btn-danger' : 'btn-secondary'\" class=\"btn btn-sm\">TRACE</button>\n                      <button (click)=\"changeLevel(logger.name, 'DEBUG')\" [ngClass]=\"(logger.level=='DEBUG') ? 'btn-warning' : 'btn-secondary'\" class=\"btn btn-sm\">DEBUG</button>\n                      <button (click)=\"changeLevel(logger.name, 'INFO')\" [ngClass]=\"(logger.level=='INFO') ? 'btn-info' : 'btn-secondary'\" class=\"btn btn-sm\">INFO</button>\n                      <button (click)=\"changeLevel(logger.name, 'WARN')\" [ngClass]=\"(logger.level=='WARN') ? 'btn-success' : 'btn-secondary'\" class=\"btn btn-sm\">WARN</button>\n                      <button (click)=\"changeLevel(logger.name, 'ERROR')\" [ngClass]=\"(logger.level=='ERROR') ? 'btn-primary' : 'btn-secondary'\" class=\"btn btn-sm\">ERROR</button>\n                  </td>\n              </tr>\n          </table>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"LogsService"}]}],"ngOnInit":[{"__symbolic":"method"}],"changeLevel":[{"__symbolic":"method"}]}},"LogsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"}]}],"changeLevel":[{"__symbolic":"method"}],"findAll":[{"__symbolic":"method"}]}},"logsRoute":{"path":"logs","component":{"__symbolic":"reference","name":"LogsComponent"},"data":{"pageTitle":"logs.title"}},"Log":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"string"}]}]}},"JhiMetricsMonitoringComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-metrics","template":"\n      <div>\n          <h2>\n              <span jhiTranslate=\"metrics.title\">Application Metrics</span>\n              <button class=\"btn btn-primary float-right\" (click)=\"refresh()\">\n                  <span class=\"fa fa-refresh\"></span> <span jhiTranslate=\"metrics.refresh.button\">Refresh</span>\n              </button>\n          </h2>\n\n          <h3 jhiTranslate=\"metrics.jvm.title\">JVM Metrics</h3>\n          <div class=\"row\" *ngIf=\"!updatingMetrics\">\n              <div class=\"col-md-4\">\n                  <b jhiTranslate=\"metrics.jvm.memory.title\">Memory</b>\n                  <p><span jhiTranslate=\"metrics.jvm.memory.total\">Total Memory</span> ({{metrics.gauges['jvm.memory.total.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.total.max'].value / 1000000 | number:'1.0-0'}}M)</p>\n                  <ngb-progressbar type=\"success\" [max]=\"metrics.gauges['jvm.memory.total.max'].value\" [value]=\"metrics.gauges['jvm.memory.total.used'].value\" [striped]=\"true\" [animated]=\"true\">\n                      <span>{{metrics.gauges['jvm.memory.total.used'].value * 100 / metrics.gauges['jvm.memory.total.max'].value  | number:'1.0-0'}}%</span>\n                  </ngb-progressbar>\n                  <p><span jhiTranslate=\"metrics.jvm.memory.heap\">Heap Memory</span> ({{metrics.gauges['jvm.memory.heap.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.heap.max'].value / 1000000 | number:'1.0-0'}}M)</p>\n                  <ngb-progressbar [max]=\"metrics.gauges['jvm.memory.heap.max'].value\" [value]=\"metrics.gauges['jvm.memory.heap.used'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                      <span>{{metrics.gauges['jvm.memory.heap.used'].value * 100 / metrics.gauges['jvm.memory.heap.max'].value  | number:'1.0-0'}}%</span>\n                  </ngb-progressbar>\n                  <p><span jhiTranslate=\"metrics.jvm.memory.nonheap\">Non-Heap Memory</span> ({{metrics.gauges['jvm.memory.non-heap.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.non-heap.committed'].value / 1000000 | number:'1.0-0'}}M)</p>\n                  <ngb-progressbar [max]=\"metrics.gauges['jvm.memory.non-heap.committed'].value\" [value]=\"metrics.gauges['jvm.memory.non-heap.used'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                      <span>{{metrics.gauges['jvm.memory.non-heap.used'].value * 100 / metrics.gauges['jvm.memory.non-heap.committed'].value  | number:'1.0-0'}}%</span>\n                  </ngb-progressbar>\n              </div>\n              <div class=\"col-md-4\">\n                  <b jhiTranslate=\"metrics.jvm.threads.title\">Threads</b> (Total: {{metrics.gauges['jvm.threads.count'].value}}) <a class=\"hand\" (click)=\"refreshThreadDumpData()\" data-toggle=\"modal\" data-target=\"#threadDump\"><i class=\"fa fa-eye\"></i></a>\n                  <p><span jhiTranslate=\"metrics.jvm.threads.runnable\">Runnable</span> {{metrics.gauges['jvm.threads.runnable.count'].value}}</p>\n                  <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.runnable.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                      <span>{{metrics.gauges['jvm.threads.runnable.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n                  </ngb-progressbar>\n                  <p><span jhiTranslate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{metrics.gauges['jvm.threads.timed_waiting.count'].value}})</p>\n                  <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.timed_waiting.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"warning\">\n                      <span>{{metrics.gauges['jvm.threads.timed_waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n                  </ngb-progressbar>\n                  <p><span jhiTranslate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{metrics.gauges['jvm.threads.waiting.count'].value}})</p>\n                  <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.waiting.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"warning\">\n                      <span>{{metrics.gauges['jvm.threads.waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n                  </ngb-progressbar>\n                  <p><span jhiTranslate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{metrics.gauges['jvm.threads.blocked.count'].value}})</p>\n                  <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.blocked.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                      <span>{{metrics.gauges['jvm.threads.blocked.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n                  </ngb-progressbar>\n              </div>\n              <div class=\"col-md-4\">\n                  <b jhiTranslate=\"metrics.jvm.gc.title\">Garbage collections</b>\n                  <div class=\"row\" *ngIf=\"metrics.gauges['jvm.garbage.PS-MarkSweep.count']\">\n                      <div class=\"col-md-9\" jhiTranslate=\"metrics.jvm.gc.marksweepcount\">Mark Sweep count</div>\n                      <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.count'].value}}</div>\n                  </div>\n                  <div class=\"row\" *ngIf=\"metrics.gauges['jvm.garbage.PS-MarkSweep.time']\">\n                      <div class=\"col-md-9\" jhiTranslate=\"metrics.jvm.gc.marksweeptime\">Mark Sweep time</div>\n                      <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.time'].value}}ms</div>\n                  </div>\n                  <div class=\"row\" *ngIf=\"metrics.gauges['jvm.garbage.PS-Scavenge.count']\">\n                      <div class=\"col-md-9\" jhiTranslate=\"metrics.jvm.gc.scavengecount\">Scavenge count</div>\n                      <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.count'].value}}</div>\n                  </div>\n                  <div class=\"row\" *ngIf=\"metrics.gauges['jvm.garbage.PS-Scavenge.time']\">\n                      <div class=\"col-md-9\" jhiTranslate=\"metrics.jvm.gc.scavengetime\">Scavenge time</div>\n                      <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.time'].value}}ms</div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"well well-lg\" *ngIf=\"updatingMetrics\" jhiTranslate=\"metrics.updating\">Updating...</div>\n\n          <h3 jhiTranslate=\"metrics.jvm.http.title\">HTTP requests (events per second)</h3>\n          <p *ngIf=\"metrics.counters\">\n              <span jhiTranslate=\"metrics.jvm.http.active\">Active requests</span> <b>{{metrics.counters['com.codahale.metrics.servlet.InstrumentedFilter.activeRequests'].count | number:'1.0-0'}}</b> - <span jhiTranslate=\"metrics.jvm.http.total\">Total requests</span> <b>{{metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count | number:'1.0-0'}}</b>\n          </p>\n          <div class=\"table-responsive\" *ngIf=\"!updatingMetrics\">\n              <table class=\"table table-striped\">\n                  <thead>\n                  <tr>\n                      <th jhiTranslate=\"metrics.jvm.http.table.code\">Code</th>\n                      <th jhiTranslate=\"metrics.jvm.http.table.count\">Count</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.jvm.http.table.mean\">Mean</th>\n                      <th class=\"text-right\"><span jhiTranslate=\"metrics.jvm.http.table.average\">Average</span> (1 min)</th>\n                      <th class=\"text-right\"><span jhiTranslate=\"metrics.jvm.http.table.average\">Average</span> (5 min)</th>\n                      <th class=\"text-right\"><span jhiTranslate=\"metrics.jvm.http.table.average\">Average</span> (15 min)</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr>\n                      <td jhiTranslate=\"metrics.jvm.http.code.ok\">OK</td>\n                      <td>\n                          <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                              <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count}}</span>\n                          </ngb-progressbar>\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].mean_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m1_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m5_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m15_rate) | number:'1.0-2'}}\n                      </td>\n                  </tr>\n                  <tr>\n                      <td jhiTranslate=\"metrics.jvm.http.code.notfound\">Not Found</td>\n                      <td>\n                          <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                              <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count}}</span>\n                          </ngb-progressbar>\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].mean_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m1_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m5_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m15_rate) | number:'1.0-2'}}\n                      </td>\n                  </tr>\n                  <tr>\n                      <td jhiTranslate=\"metrics.jvm.http.code.servererror\">Server error</td>\n                      <td>\n                          <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                              <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count}}</span>\n                          </ngb-progressbar>\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].mean_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m1_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m5_rate) | number:'1.0-2'}}\n                      </td>\n                      <td class=\"text-right\">\n                          {{filterNaN(metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m15_rate) | number:'1.0-2'}}\n                      </td>\n                  </tr>\n                  </tbody>\n              </table>\n          </div>\n\n          <h3 jhiTranslate=\"metrics.servicesstats.title\">Services statistics (time in millisecond)</h3>\n          <div class=\"table-responsive\" *ngIf=\"!updatingMetrics\">\n              <table class=\"table table-striped\">\n                  <thead>\n                  <tr>\n                      <th jhiTranslate=\"metrics.servicesstats.table.name\">Service name</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.count\">Count</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.mean\">Mean</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.min\">Min</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p50\">p50</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p75\">p75</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p95\">p95</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p99\">p99</th>\n                      <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.max\">Max</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr *ngFor=\"let entry of servicesStats | keys\">\n                      <td>{{entry.key}}</td>\n                      <td class=\"text-right\">{{entry.value.count}}</td>\n                      <td class=\"text-right\">{{entry.value.mean * 1000 | number:'1.0-0'}}</td>\n                      <td class=\"text-right\">{{entry.value.min * 1000 | number:'1.0-0'}}</td>\n                      <td class=\"text-right\">{{entry.value.p50 * 1000 | number:'1.0-0'}}</td>\n                      <td class=\"text-right\">{{entry.value.p75 * 1000 | number:'1.0-0'}}</td>\n                      <td class=\"text-right\">{{entry.value.p95 * 1000 | number:'1.0-0'}}</td>\n                      <td class=\"text-right\">{{entry.value.p99 * 1000 | number:'1.0-0'}}</td>\n                      <td class=\"text-right\">{{entry.value.max * 1000 | number:'1.0-0'}}</td>\n                  </tr>\n                  </tbody>\n              </table>\n          </div>\n    \n          <h3 jhiTranslate=\"metrics.datasource.title\" *ngIf=\"metrics.gauges && metrics.gauges['HikariPool-1.pool.TotalConnections'] && metrics.gauges['HikariPool-1.pool.TotalConnections'].value > 0\">DataSource statistics (time in millisecond)</h3>\n          <div class=\"table-responsive\" *ngIf=\"!updatingMetrics && metrics.gauges && metrics.gauges['HikariPool-1.pool.TotalConnections'] && metrics.gauges['HikariPool-1.pool.TotalConnections'].value > 0\">\n              <table class=\"table table-striped\">\n                  <thead>\n                      <tr>\n                          <th><span jhiTranslate=\"metrics.datasource.usage\">Usage</span> ({{metrics.gauges['HikariPool-1.pool.ActiveConnections'].value}} / {{metrics.gauges['HikariPool-1.pool.TotalConnections'].value}})</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.datasource.count\">Count</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.datasource.mean\">Mean</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.datasource.min\">Min</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.datasource.p50\">p50</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.datasource.p75\">p75</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.datasource.p95\">p95</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.datasource.p99\">p99</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.datasource.max\">Max</th>\n                      </tr>\n                  </thead>\n                  <tbody>\n                      <tr>\n                          <td>\n                              <div class=\"progress progress-striped\">\n                                  <ngb-progressbar [max]=\"metrics.gauges['HikariPool-1.pool.TotalConnections'].value\" [value]=\"metrics.gauges['HikariPool-1.pool.ActiveConnections'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                                      <span>{{metrics.gauges['HikariPool-1.pool.ActiveConnections'].value * 100 / metrics.gauges['HikariPool-1.pool.TotalConnections'].value  | number:'1.0-0'}}%</span>\n                                  </ngb-progressbar>\n                              </div>\n                          </td>\n                          <td class=\"text-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].count}}</td>\n                          <td class=\"text-right\">{{filterNaN(metrics.histograms['HikariPool-1.pool.Usage'].mean) | number:'1.0-2'}}</td>\n                          <td class=\"text-right\">{{filterNaN(metrics.histograms['HikariPool-1.pool.Usage'].min) | number:'1.0-2'}}</td>\n                          <td class=\"text-right\">{{filterNaN(metrics.histograms['HikariPool-1.pool.Usage'].p50) | number:'1.0-2'}}</td>\n                          <td class=\"text-right\">{{filterNaN(metrics.histograms['HikariPool-1.pool.Usage'].p75) | number:'1.0-2'}}</td>\n                          <td class=\"text-right\">{{filterNaN(metrics.histograms['HikariPool-1.pool.Usage'].p95) | number:'1.0-2'}}</td>\n                          <td class=\"text-right\">{{filterNaN(metrics.histograms['HikariPool-1.pool.Usage'].p99) | number:'1.0-2'}}</td>\n                          <td class=\"text-right\">{{filterNaN(metrics.histograms['HikariPool-1.pool.Usage'].max) | number:'1.0-2'}}</td>\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModal"},{"__symbolic":"reference","name":"JhiMetricsService"}]}],"ngOnInit":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}],"refreshThreadDumpData":[{"__symbolic":"method"}],"filterNaN":[{"__symbolic":"method"}]}},"JhiMetricsMonitoringModalComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-metrics-modal","template":"\n      <!-- Modal used to display the threads dump -->\n      <div class=\"modal-header\">\n          <h4 class=\"modal-title\" jhiTranslate=\"metrics.jvm.threads.dump.title\">Threads dump</h4>\n          <button type=\"button\" class=\"close\" (click)=\"activeModal.dismiss('closed')\">&times;</button>\n      </div>\n      <div class=\"modal-body\">\n          <span class=\"badge badge-primary\" (click)=\"threadDumpFilter = {}\">All&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpAll}}</span></span>&nbsp;\n          <span class=\"badge badge-success\" (click)=\"threadDumpFilter = {threadState: 'RUNNABLE'}\">Runnable&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpRunnable}}</span></span>&nbsp;\n          <span class=\"badge badge-info\" (click)=\"threadDumpFilter = {threadState: 'WAITING'}\">Waiting&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpWaiting}}</span></span>&nbsp;\n          <span class=\"badge badge-warning\" (click)=\"threadDumpFilter = {threadState: 'TIMED_WAITING'}\">Timed Waiting&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpTimedWaiting}}</span></span>&nbsp;\n          <span class=\"badge badge-danger\" (click)=\"threadDumpFilter = {threadState: 'BLOCKED'}\">Blocked&nbsp;<span class=\"badge badge-pill badge-default\">{{threadDumpBlocked}}</span></span>&nbsp;\n          <div class=\"mt-2\">&nbsp;</div>\n          Filter\n          <input type=\"text\" [(ngModel)]=\"threadDumpFilter\" class=\"form-control\">\n          <div class=\"pad\" *ngFor=\"let entry of threadDump | pureFilter:threadDumpFilter:'lockName' | keys\">\n              <h6>\n                  <span class=\"badge\" [ngClass]=\"getBadgeClass(entry.value.threadState)\">{{entry.value.threadState}}</span>&nbsp;{{entry.value.threadName}} (ID {{entry.value.threadId}})\n                  <a (click)=\"entry.show = !entry.show\" href=\"javascript:void(0);\">\n                     <span [hidden]=\"entry.show\" jhiTranslate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span>\n                     <span [hidden]=\"!entry.show\" jhiTranslate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span>\n                  </a>\n              </h6>\n              <div class=\"card\" [hidden]=\"!entry.show\">\n                  <div class=\"card-body\">\n                      <div *ngFor=\"let st of entry.value.stackTrace | keys\" class=\"break\">\n                          <samp>{{st.value.className}}.{{st.value.methodName}}(<code>{{st.value.fileName}}:{{st.value.lineNumber}}</code>)</samp>\n                          <span class=\"mt-1\"></span>\n                      </div>\n                  </div>\n              </div>\n              <table class=\"table table-sm table-responsive\">\n                  <thead>\n                      <tr>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th>\n                          <th class=\"text-right\" jhiTranslate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th>\n                          <th jhiTranslate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th>\n                      </tr>\n                  </thead>\n                  <tbody>\n                      <tr>\n                          <td>{{entry.value.blockedTime}}</td>\n                          <td>{{entry.value.blockedCount}}</td>\n                          <td>{{entry.value.waitedTime}}</td>\n                          <td>{{entry.value.waitedCount}}</td>\n                          <td><code>{{entry.value.lockName}}</code></td>\n                      </tr>\n                  </tbody>\n              </table>\n\n          </div>\n      </div>\n      <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary float-left\" data-dismiss=\"modal\" (click)=\"activeModal.dismiss('closed')\">Done</button>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbActiveModal"}]}],"ngOnInit":[{"__symbolic":"method"}],"getBadgeClass":[{"__symbolic":"method"}]}},"JhiMetricsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"}]}],"getMetrics":[{"__symbolic":"method"}],"threadDump":[{"__symbolic":"method"}]}},"metricsRoute":{"path":"jhi-metrics","component":{"__symbolic":"reference","name":"JhiMetricsMonitoringComponent"},"data":{"pageTitle":"metrics.title"}},"UserMgmtDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-user-mgmt-dialog","template":"\n      <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n          <div class=\"modal-header\">\n              <h4 class=\"modal-title\" id=\"myUserLabel\" jhiTranslate=\"userManagement.home.createOrEditLabel\">\n                  Create or edit a User</h4>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                  (click)=\"clear()\">&times;</button>\n          </div>\n          <div class=\"modal-body\">\n              <jhi-alert-error></jhi-alert-error>\n              <div class=\"form-group\" [hidden]=\"!user.id\">\n                  <label jhiTranslate=\"global.field.id\">ID</label>\n                  <input type=\"text\" class=\"form-control\" name=\"id\"\n                         [(ngModel)]=\"user.id\" readonly>\n              </div>\n\n              <div class=\"form-group\">\n                  <label class=\"form-control-label\" jhiTranslate=\"userManagement.login\">Login</label>\n                  <input type=\"text\" class=\"form-control\" name=\"login\" #loginInput=\"ngModel\"\n                         [(ngModel)]=\"user.login\" required minlength=\"1\" maxlength=\"50\" pattern=\"^[_'.@A-Za-z0-9-]*$\">\n\n                  <div *ngIf=\"loginInput.dirty && loginInput.invalid\">\n                      <small class=\"form-text text-danger\"\n                         *ngIf=\"loginInput.errors.required\" jhiTranslate=\"entity.validation.required\">\n                          This field is required.\n                      </small>\n\n                      <small class=\"form-text text-danger\"\n                         *ngIf=\"loginInput.errors.maxlength\" jhiTranslate=\"entity.validation.maxlength\"\n                         translateValues=\"{max: 50}\">\n                          This field cannot be longer than 50 characters.\n                      </small>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"form-control-label\" jhiTranslate=\"userManagement.firstName\">First Name</label>\n                  <input type=\"text\" class=\"form-control\" name=\"firstName\" #firstNameInput=\"ngModel\"\n                         [(ngModel)]=\"user.firstName\" maxlength=\"50\">\n\n                  <div *ngIf=\"firstNameInput.dirty && firstNameInput.invalid\">\n                      <small class=\"form-text text-danger\"\n                         *ngIf=\"firstNameInput.errors.maxlength\" jhiTranslate=\"entity.validation.maxlength\"\n                         translateValues=\"{max: 50}\">\n                          This field cannot be longer than 50 characters.\n                      </small>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label jhiTranslate=\"userManagement.lastName\">Last Name</label>\n                  <input type=\"text\" class=\"form-control\" name=\"lastName\" #lastNameInput=\"ngModel\"\n                         [(ngModel)]=\"user.lastName\" maxlength=\"50\">\n\n                  <div *ngIf=\"lastNameInput.dirty && lastNameInput.invalid\">\n                      <small class=\"form-text text-danger\"\n                         *ngIf=\"lastNameInput.errors.maxlength\" jhiTranslate=\"entity.validation.maxlength\"\n                         translateValues=\"{max: 50}\">\n                          This field cannot be longer than 50 characters.\n                      </small>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"form-control-label\" jhiTranslate=\"userManagement.email\">Email</label>\n                  <input type=\"email\" class=\"form-control\" name=\"email\" #emailInput=\"ngModel\"\n                         [(ngModel)]=\"user.email\" minlength=\"5\" required maxlength=\"100\" email>\n\n                  <div *ngIf=\"emailInput.dirty && emailInput.invalid\">\n                      <small class=\"form-text text-danger\"\n                         *ngIf=\"emailInput.errors.required\" jhiTranslate=\"entity.validation.required\">\n                          This field is required.\n                      </small>\n\n                      <small class=\"form-text text-danger\"\n                         *ngIf=\"emailInput.errors.maxlength\" jhiTranslate=\"entity.validation.maxlength\"\n                         translateValues=\"{max: 100}\">\n                          This field cannot be longer than 100 characters.\n                      </small>\n\n                      <small class=\"form-text text-danger\"\n                         *ngIf=\"emailInput.errors.minlength\" jhiTranslate=\"entity.validation.minlength\"\n                         translateValues=\"{min: 5}\">\n                          This field is required to be at least 5 characters.\n                      </small>\n\n                      <small class=\"form-text text-danger\"\n                         *ngIf=\"emailInput.errors.email\" jhiTranslate=\"global.messages.validate.email.invalid\">\n                          Your email is invalid.\n                       </small>\n                  </div>\n              </div>\n              <div class=\"form-check\">\n                  <label class=\"form-check-label\" for=\"activated\">\n                      <input class=\"form-check-input\" [disabled]=\"user.id === null\" type=\"checkbox\" id=\"activated\" name=\"activated\" [(ngModel)]=\"user.activated\">\n                      <span jhiTranslate=\"userManagement.activated\">Activated</span>\n                  </label>\n              </div>\n\n              <div class=\"form-group\" *ngIf=\"languages && languages.length > 0\">\n                  <label jhiTranslate=\"userManagement.langKey\">Lang Key</label>\n                  <select class=\"form-control\" id=\"langKey\" name=\"langKey\" [(ngModel)]=\"user.langKey\">\n                      <option *ngFor=\"let language of languages\" [value]=\"language\">{{language | findLanguageFromKey}}</option>\n                  </select>\n              </div>\n              <div class=\"form-group\">\n                  <label jhiTranslate=\"userManagement.profiles\">Profiles</label>\n                  <select class=\"form-control\" multiple name=\"authority\" [(ngModel)]=\"user.authorities\">\n                      <option *ngFor=\"let authority of authorities\" [value]=\"authority\">{{authority}}</option>\n                  </select>\n              </div>\n          </div>\n          <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n                  <span class=\"fa fa-ban\"></span>&nbsp;<span\n                  jhiTranslate=\"entity.action.cancel\">Cancel</span>\n              </button>\n              <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n                  <span class=\"fa fa-floppy-o\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n              </button>\n          </div>\n      </form>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbActiveModal"},{"__symbolic":"reference","name":"Éµb"},{"__symbolic":"reference","name":"Éµc"},{"__symbolic":"reference","module":"ng-jhipster","name":"JhiEventManager"}]}],"ngOnInit":[{"__symbolic":"method"}],"clear":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}]}},"UserDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-user-dialog","template":""}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","name":"UserModalService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"UserMgmtDeleteDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-user-mgmt-delete-dialog","template":"\n      <form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(user.login)\">\n          <div class=\"modal-header\">\n              <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                  (click)=\"clear()\">&times;</button>\n          </div>\n          <div class=\"modal-body\">\n              <jhi-alert-error></jhi-alert-error>\n              <p jhiTranslate=\"userManagement.delete.question\" translateValues=\"{login: '{{user.login}}'}\">Are you sure you want to delete this User?</p>\n          </div>\n          <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n                  <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n              </button>\n              <button type=\"submit\" class=\"btn btn-danger\">\n                  <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n              </button>\n          </div>\n      </form>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Éµc"},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbActiveModal"},{"__symbolic":"reference","module":"ng-jhipster","name":"JhiEventManager"}]}],"clear":[{"__symbolic":"method"}],"confirmDelete":[{"__symbolic":"method"}]}},"UserDeleteDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-user-delete-dialog","template":""}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","name":"UserModalService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"UserMgmtDetailComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-user-mgmt-detail","template":"\n      <div *ngIf=\"user\">\n          <h2>\n              <span jhiTranslate=\"userManagement.detail.title\">User</span> [<b>{{user.login}}</b>]\n          </h2>\n          <dl class=\"row-md jh-entity-details\">\n              <dt><span jhiTranslate=\"userManagement.login\">Login</span></dt>\n              <dd>\n                  <span>{{user.login}}</span>\n                  <span class=\"badge badge-danger\" *ngIf=\"!user.activated\"\n                        jhiTranslate=\"userManagement.deactivated\">Deactivated</span>\n                  <span class=\"badge badge-success\" *ngIf=\"user.activated\"\n                        jhiTranslate=\"userManagement.activated\">Activated</span>\n              </dd>\n              <dt><span jhiTranslate=\"userManagement.firstName\">First Name</span></dt>\n              <dd>{{user.firstName}}</dd>\n              <dt><span jhiTranslate=\"userManagement.lastName\">Last Name</span></dt>\n              <dd>{{user.lastName}}</dd>\n              <dt><span jhiTranslate=\"userManagement.email\">Email</span></dt>\n              <dd>{{user.email}}</dd>\n              <dt><span jhiTranslate=\"userManagement.langKey\">Lang Key</span></dt>\n              <dd>{{user.langKey}}</dd>\n              <dt><span jhiTranslate=\"userManagement.createdBy\">Created By</span></dt>\n              <dd>{{user.createdBy}}</dd>\n              <dt><span jhiTranslate=\"userManagement.createdDate\">Created Date</span></dt>\n              <dd>{{user.createdDate | date:'dd/MM/yy HH:mm' }}</dd>\n              <dt><span jhiTranslate=\"userManagement.lastModifiedBy\">Last Modified By</span></dt>\n              <dd>{{user.lastModifiedBy}}</dd>\n              <dt><span jhiTranslate=\"userManagement.lastModifiedDate\">Last Modified Date</span></dt>\n              <dd>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</dd>\n              <dt><span jhiTranslate=\"userManagement.profiles\">Profiles</span></dt>\n              <dd>\n                  <ul class=\"list-unstyled\">\n                      <li *ngFor=\"let authority of user.authorities\">\n                          <span class=\"badge badge-info\">{{authority}}</span>\n                      </li>\n                  </ul>\n              </dd>\n          </dl>\n          <button type=\"submit\"\n                  routerLink=\"/user-management\"\n                  class=\"btn btn-info\">\n              <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n          </button>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Éµc"},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"}]}],"ngOnInit":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"UserMgmtComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"jhi-user-mgmt","template":"\n      <div>\n          <h2>\n              <span jhiTranslate=\"userManagement.home.title\">Users</span>\n              <button class=\"btn btn-primary float-right jh-create-entity\" [routerLink]=\"['/', { outlets: { popup: ['user-management-new'] } }]\">\n                  <span class=\"fa fa-plus\"></span> <span jhiTranslate=\"userManagement.home.createLabel\">Create a new User</span>\n              </button>\n          </h2>\n          <jhi-alert></jhi-alert>\n          <div class=\"table-responsive\" *ngIf=\"users\">\n              <table class=\"table table-striped\">\n                  <thead>\n                  <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n                      <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n                      <th jhiSortBy=\"login\"><span jhiTranslate=\"userManagement.login\">Login</span> <span class=\"fa fa-sort\"></span></th>\n                      <th jhiSortBy=\"email\"><span jhiTranslate=\"userManagement.email\">Email</span> <span class=\"fa fa-sort\"></span></th>\n                      <th></th>\n                      <th jhiSortBy=\"langKey\"> <span jhiTranslate=\"userManagement.langKey\">Lang Key</span> <span class=\"fa fa-sort\"></span></th>\n                      <th><span jhiTranslate=\"userManagement.profiles\">Profiles</span></th>\n                      <th jhiSortBy=\"createdDate\"><span jhiTranslate=\"userManagement.createdDate\">Created Date</span> <span class=\"fa fa-sort\"></span></th>\n                      <th jhiSortBy=\"lastModifiedBy\"><span jhiTranslate=\"userManagement.lastModifiedBy\">Last Modified By</span> <span class=\"fa fa-sort\"></span></th>\n                      <th jhiSortBy=\"lastModifiedDate\"><span jhiTranslate=\"userManagement.lastModifiedDate\">Last Modified Date</span> <span class=\"fa fa-sort\"></span></th>\n                      <th></th>\n                  </tr>\n                  </thead>\n                  <tbody *ngIf =\"users\">\n                  <tr *ngFor=\"let user of users; trackBy: trackIdentity\">\n                      <td><a [routerLink]=\"['../user-management', user.login]\">{{user.id}}</a></td>\n                      <td>{{user.login}}</td>\n                      <td>{{user.email}}</td>\n                      <td>\n                          <button class=\"btn btn-danger btn-sm\" (click)=\"setActive(user, true)\" *ngIf=\"!user.activated\"\n                                  jhiTranslate=\"userManagement.deactivated\">Deactivated</button>\n                          <button class=\"btn btn-success btn-sm\" (click)=\"setActive(user, false)\" *ngIf=\"user.activated\"\n                                  [disabled]=\"currentAccount.login === user.login\" jhiTranslate=\"userManagement.activated\">Activated</button>\n                      </td>\n                      <td>{{user.langKey}}</td>\n                      <td>\n                          <div *ngFor=\"let authority of user.authorities\">\n                              <span class=\"badge badge-info\">{{ authority }}</span>\n                          </div>\n                      </td>\n                      <td>{{user.createdDate | date:'dd/MM/yy HH:mm'}}</td>\n                      <td>{{user.lastModifiedBy}}</td>\n                      <td>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</td>\n                      <td class=\"text-right\">\n                          <div class=\"btn-group flex-btn-group-container\">\n                              <button type=\"submit\"\n                                      [routerLink]=\"['../user-management', user.login]\"\n                                      class=\"btn btn-info btn-sm\">\n                                  <span class=\"fa fa-eye\"></span>\n                                  <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n                              </button>\n                              <button type=\"submit\"\n                                      [routerLink]=\"['/', { outlets: { popup: 'user-management/'+ user.login + '/edit'} }]\"\n                                      replaceUrl=\"true\"\n                                      class=\"btn btn-primary btn-sm\">\n                                  <span class=\"fa fa-pencil\"></span>\n                                  <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                              </button>\n                              <button type=\"submit\"\n                                      [routerLink]=\"['/', { outlets: { popup: 'user-management/'+ user.login + '/delete'} }]\"\n                                      replaceUrl=\"true\"\n                                      class=\"btn btn-danger btn-sm\" [disabled]=\"currentAccount.login === user.login\">\n                                  <span class=\"fa fa-remove\"></span>\n                                  <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                              </button>\n                          </div>\n                      </td>\n                  </tr>\n                  </tbody>\n              </table>\n          </div>\n          <div *ngIf=\"users\">\n              <div class=\"row justify-content-center\">\n                  <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n              </div>\n              <div class=\"row justify-content-center\">\n                  <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" (pageChange)=\"loadPage(page)\"></ngb-pagination>\n              </div>\n          </div>\n      </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Éµc"},{"__symbolic":"reference","module":"ng-jhipster","name":"JhiParseLinks"},{"__symbolic":"reference","module":"ng-jhipster","name":"JhiAlertService"},{"__symbolic":"reference","name":"Éµd"},{"__symbolic":"reference","module":"ng-jhipster","name":"JhiEventManager"},{"__symbolic":"reference","module":"ng-jhipster","name":"JhiPaginationUtil"},{"__symbolic":"reference","name":"Éµa"},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","module":"@angular/router","name":"Router"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"registerChangeInUsers":[{"__symbolic":"method"}],"setActive":[{"__symbolic":"method"}],"loadAll":[{"__symbolic":"method"}],"trackIdentity":[{"__symbolic":"method"}],"sort":[{"__symbolic":"method"}],"loadPage":[{"__symbolic":"method"}],"transition":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"UserResolve":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Éµd"}]}],"canActivate":[{"__symbolic":"method"}]}},"UserResolvePagingParams":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ng-jhipster","name":"JhiPaginationUtil"}]}],"resolve":[{"__symbolic":"method"}]}},"userMgmtRoute":[{"path":"user-management","component":{"__symbolic":"reference","name":"UserMgmtComponent"},"resolve":{"pagingParams":{"__symbolic":"reference","name":"UserResolvePagingParams"}},"data":{"pageTitle":"userManagement.home.title"}},{"path":"user-management/:login","component":{"__symbolic":"reference","name":"UserMgmtDetailComponent"},"data":{"pageTitle":"userManagement.home.title"}}],"userDialogRoute":[{"path":"user-management-new","component":{"__symbolic":"reference","name":"UserDialogComponent"},"outlet":"popup"},{"path":"user-management/:login/edit","component":{"__symbolic":"reference","name":"UserDialogComponent"},"outlet":"popup"},{"path":"user-management/:login/delete","component":{"__symbolic":"reference","name":"UserDeleteDialogComponent"},"outlet":"popup"}],"UserModalService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModal"},{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"Éµc"}]}],"open":[{"__symbolic":"method"}],"userModalRef":[{"__symbolic":"method"}]}},"adminState":[{"path":"","data":{"authorities":["ROLE_ADMIN"]},"canActivate":[{"__symbolic":"reference","name":"Éµe"}],"children":[{"__symbolic":"reference","name":"Éµf"},{"__symbolic":"reference","name":"Éµg"},{"__symbolic":"reference","name":"Éµh"},{"__symbolic":"reference","name":"Éµi"},{"__symbolic":"reference","name":"Éµj"},{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"Éµk"}},{"__symbolic":"reference","name":"Éµl"}]},{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"Éµm"}}],"Éµa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbPaginationConfig"}]}]}}},"origins":{"AuditsComponent":"./audits/audits.component","AuditsService":"./audits/audits.service","auditsRoute":"./audits/audits.route","Audit":"./audits/audit.model","AuditData":"./audits/audit-data.model","JhiConfigurationComponent":"./configuration/configuration.component","JhiConfigurationService":"./configuration/configuration.service","configurationRoute":"./configuration/configuration.route","JhiDocsComponent":"./docs/docs.component","docsRoute":"./docs/docs.route","JhiHealthCheckComponent":"./health/health.component","JhiHealthModalComponent":"./health/health-modal.component","JhiHealthService":"./health/health.service","healthRoute":"./health/health.route","LogsComponent":"./logs/logs.component","LogsService":"./logs/logs.service","logsRoute":"./logs/logs.route","Log":"./logs/log.model","JhiMetricsMonitoringComponent":"./metrics/metrics.component","JhiMetricsMonitoringModalComponent":"./metrics/metrics-modal.component","JhiMetricsService":"./metrics/metrics.service","metricsRoute":"./metrics/metrics.route","UserMgmtDialogComponent":"./user-management/user-management-dialog.component","UserDialogComponent":"./user-management/user-management-dialog.component","UserMgmtDeleteDialogComponent":"./user-management/user-management-delete-dialog.component","UserDeleteDialogComponent":"./user-management/user-management-delete-dialog.component","UserMgmtDetailComponent":"./user-management/user-management-detail.component","UserMgmtComponent":"./user-management/user-management.component","UserResolve":"./user-management/user-management.route","UserResolvePagingParams":"./user-management/user-management.route","userMgmtRoute":"./user-management/user-management.route","userDialogRoute":"./user-management/user-management.route","UserModalService":"./user-management/user-modal.service","adminState":"./admin.route","Éµa":"../blocks/config/uib-pagination.config","Éµb":"../shared","Éµc":"../shared","Éµd":"../shared","Éµe":"../shared","Éµf":"./","Éµg":"./","Éµh":"./","Éµi":"./","Éµj":"./","Éµk":"./","Éµl":"./","Éµm":"./"},"importAs":"@externalmodule/admin"}