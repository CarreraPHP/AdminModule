{"version":3,"sources":["user-management.component.ts"],"names":[],"mappings":"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","file":"user-management.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JhiEventManager, JhiPaginationUtil, JhiParseLinks, JhiAlertService } from 'ng-jhipster';\n\nimport { ITEMS_PER_PAGE, Principal, User, UserService, ResponseWrapper } from '../../shared';\nimport { PaginationConfig } from '../../blocks/config/uib-pagination.config';\nexport class UserMgmtComponent implements OnInit, OnDestroy {\n\n    currentAccount: any;\n    users: User[];\n    error: any;\n    success: any;\n    routeData: any;\n    links: any;\n    totalItems: any;\n    queryCount: any;\n    itemsPerPage: any;\n    page: any;\n    predicate: any;\n    previousPage: any;\n    reverse: any;\n/**\n * @param {?} userService\n * @param {?} parseLinks\n * @param {?} alertService\n * @param {?} principal\n * @param {?} eventManager\n * @param {?} paginationUtil\n * @param {?} paginationConfig\n * @param {?} activatedRoute\n * @param {?} router\n */\nconstructor(\nprivate userService: UserService,\nprivate parseLinks: JhiParseLinks,\nprivate alertService: JhiAlertService,\nprivate principal: Principal,\nprivate eventManager: JhiEventManager,\nprivate paginationUtil: JhiPaginationUtil,\nprivate paginationConfig: PaginationConfig,\nprivate activatedRoute: ActivatedRoute,\nprivate router: Router\n    ) {\n        this.itemsPerPage = ITEMS_PER_PAGE;\n        this.routeData = this.activatedRoute.data.subscribe((data) => {\n            this.page = data['pagingParams'].page;\n            this.previousPage = data['pagingParams'].page;\n            this.reverse = data['pagingParams'].ascending;\n            this.predicate = data['pagingParams'].predicate;\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.principal.identity().then((account) => {\n            this.currentAccount = account;\n            this.loadAll();\n            this.registerChangeInUsers();\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.routeData.unsubscribe();\n    }\n/**\n * @return {?}\n */\nregisterChangeInUsers() {\n        this.eventManager.subscribe('userListModification', (response) => this.loadAll());\n    }\n/**\n * @param {?} user\n * @param {?} isActivated\n * @return {?}\n */\nsetActive(user, isActivated) {\n        user.activated = isActivated;\n\n        this.userService.update(user).subscribe(\n            (response) => {\n                if (response.status === 200) {\n                    this.error = null;\n                    this.success = 'OK';\n                    this.loadAll();\n                } else {\n                    this.success = null;\n                    this.error = 'ERROR';\n                }\n            });\n    }\n/**\n * @return {?}\n */\nloadAll() {\n        this.userService.query({\n            page: this.page - 1,\n            size: this.itemsPerPage,\n            sort: this.sort()}).subscribe(\n            (res: ResponseWrapper) => this.onSuccess(res.json, res.headers),\n            (res: ResponseWrapper) => this.onError(res.json)\n        );\n    }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackIdentity(index, item: User) {\n        return item.id;\n    }\n/**\n * @return {?}\n */\nsort() {\n        const /** @type {?} */ result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    }\n/**\n * @param {?} page\n * @return {?}\n */\nloadPage(page: number) {\n        if (page !== this.previousPage) {\n            this.previousPage = page;\n            this.transition();\n        }\n    }\n/**\n * @return {?}\n */\ntransition() {\n        this.router.navigate(['/user-management'], {\n            queryParams: {\n                page: this.page,\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n            }\n        });\n        this.loadAll();\n    }\n/**\n * @param {?} data\n * @param {?} headers\n * @return {?}\n */\nprivate onSuccess(data, headers) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = headers.get('X-Total-Count');\n        this.queryCount = this.totalItems;\n        this.users = data;\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate onError(error) {\n        this.alertService.error(error.error, error.message, null);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'jhi-user-mgmt',\n    template: `\n      <div>\n          <h2>\n              <span jhiTranslate=\"userManagement.home.title\">Users</span>\n              <button class=\"btn btn-primary float-right jh-create-entity\" [routerLink]=\"['/', { outlets: { popup: ['user-management-new'] } }]\">\n                  <span class=\"fa fa-plus\"></span> <span jhiTranslate=\"userManagement.home.createLabel\">Create a new User</span>\n              </button>\n          </h2>\n          <jhi-alert></jhi-alert>\n          <div class=\"table-responsive\" *ngIf=\"users\">\n              <table class=\"table table-striped\">\n                  <thead>\n                  <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n                      <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n                      <th jhiSortBy=\"login\"><span jhiTranslate=\"userManagement.login\">Login</span> <span class=\"fa fa-sort\"></span></th>\n                      <th jhiSortBy=\"email\"><span jhiTranslate=\"userManagement.email\">Email</span> <span class=\"fa fa-sort\"></span></th>\n                      <th></th>\n                      <th jhiSortBy=\"langKey\"> <span jhiTranslate=\"userManagement.langKey\">Lang Key</span> <span class=\"fa fa-sort\"></span></th>\n                      <th><span jhiTranslate=\"userManagement.profiles\">Profiles</span></th>\n                      <th jhiSortBy=\"createdDate\"><span jhiTranslate=\"userManagement.createdDate\">Created Date</span> <span class=\"fa fa-sort\"></span></th>\n                      <th jhiSortBy=\"lastModifiedBy\"><span jhiTranslate=\"userManagement.lastModifiedBy\">Last Modified By</span> <span class=\"fa fa-sort\"></span></th>\n                      <th jhiSortBy=\"lastModifiedDate\"><span jhiTranslate=\"userManagement.lastModifiedDate\">Last Modified Date</span> <span class=\"fa fa-sort\"></span></th>\n                      <th></th>\n                  </tr>\n                  </thead>\n                  <tbody *ngIf =\"users\">\n                  <tr *ngFor=\"let user of users; trackBy: trackIdentity\">\n                      <td><a [routerLink]=\"['../user-management', user.login]\">{{user.id}}</a></td>\n                      <td>{{user.login}}</td>\n                      <td>{{user.email}}</td>\n                      <td>\n                          <button class=\"btn btn-danger btn-sm\" (click)=\"setActive(user, true)\" *ngIf=\"!user.activated\"\n                                  jhiTranslate=\"userManagement.deactivated\">Deactivated</button>\n                          <button class=\"btn btn-success btn-sm\" (click)=\"setActive(user, false)\" *ngIf=\"user.activated\"\n                                  [disabled]=\"currentAccount.login === user.login\" jhiTranslate=\"userManagement.activated\">Activated</button>\n                      </td>\n                      <td>{{user.langKey}}</td>\n                      <td>\n                          <div *ngFor=\"let authority of user.authorities\">\n                              <span class=\"badge badge-info\">{{ authority }}</span>\n                          </div>\n                      </td>\n                      <td>{{user.createdDate | date:'dd/MM/yy HH:mm'}}</td>\n                      <td>{{user.lastModifiedBy}}</td>\n                      <td>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</td>\n                      <td class=\"text-right\">\n                          <div class=\"btn-group flex-btn-group-container\">\n                              <button type=\"submit\"\n                                      [routerLink]=\"['../user-management', user.login]\"\n                                      class=\"btn btn-info btn-sm\">\n                                  <span class=\"fa fa-eye\"></span>\n                                  <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n                              </button>\n                              <button type=\"submit\"\n                                      [routerLink]=\"['/', { outlets: { popup: 'user-management/'+ user.login + '/edit'} }]\"\n                                      replaceUrl=\"true\"\n                                      class=\"btn btn-primary btn-sm\">\n                                  <span class=\"fa fa-pencil\"></span>\n                                  <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                              </button>\n                              <button type=\"submit\"\n                                      [routerLink]=\"['/', { outlets: { popup: 'user-management/'+ user.login + '/delete'} }]\"\n                                      replaceUrl=\"true\"\n                                      class=\"btn btn-danger btn-sm\" [disabled]=\"currentAccount.login === user.login\">\n                                  <span class=\"fa fa-remove\"></span>\n                                  <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                              </button>\n                          </div>\n                      </td>\n                  </tr>\n                  </tbody>\n              </table>\n          </div>\n          <div *ngIf=\"users\">\n              <div class=\"row justify-content-center\">\n                  <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n              </div>\n              <div class=\"row justify-content-center\">\n                  <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" (pageChange)=\"loadPage(page)\"></ngb-pagination>\n              </div>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UserService, },\n{type: JhiParseLinks, },\n{type: JhiAlertService, },\n{type: Principal, },\n{type: JhiEventManager, },\n{type: JhiPaginationUtil, },\n{type: PaginationConfig, },\n{type: ActivatedRoute, },\n{type: Router, },\n];\n}\n\nfunction UserMgmtComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nUserMgmtComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUserMgmtComponent.ctorParameters;\n/** @type {?} */\nUserMgmtComponent.prototype.currentAccount;\n/** @type {?} */\nUserMgmtComponent.prototype.users;\n/** @type {?} */\nUserMgmtComponent.prototype.error;\n/** @type {?} */\nUserMgmtComponent.prototype.success;\n/** @type {?} */\nUserMgmtComponent.prototype.routeData;\n/** @type {?} */\nUserMgmtComponent.prototype.links;\n/** @type {?} */\nUserMgmtComponent.prototype.totalItems;\n/** @type {?} */\nUserMgmtComponent.prototype.queryCount;\n/** @type {?} */\nUserMgmtComponent.prototype.itemsPerPage;\n/** @type {?} */\nUserMgmtComponent.prototype.page;\n/** @type {?} */\nUserMgmtComponent.prototype.predicate;\n/** @type {?} */\nUserMgmtComponent.prototype.previousPage;\n/** @type {?} */\nUserMgmtComponent.prototype.reverse;\n/** @type {?} */\nUserMgmtComponent.prototype.userService;\n/** @type {?} */\nUserMgmtComponent.prototype.parseLinks;\n/** @type {?} */\nUserMgmtComponent.prototype.alertService;\n/** @type {?} */\nUserMgmtComponent.prototype.principal;\n/** @type {?} */\nUserMgmtComponent.prototype.eventManager;\n/** @type {?} */\nUserMgmtComponent.prototype.paginationUtil;\n/** @type {?} */\nUserMgmtComponent.prototype.paginationConfig;\n/** @type {?} */\nUserMgmtComponent.prototype.activatedRoute;\n/** @type {?} */\nUserMgmtComponent.prototype.router;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}