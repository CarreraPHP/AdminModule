{"version":3,"sources":["user-management-detail.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAA6B,MAAA,eAAA,CAAA;AACtC,OAAO,EAAE,cAAA,EAAe,MAAA,iBAAA,CAAA;AAGxB,OAAO,EAAQ,WAAA,EAAY,MAAA,cAAA,CAAA;AAC3B,MAEC;IAED;;;OAGG;IACH,YAAgB,WAAa,EACb,KAAO;QADP,gBAAA,GAAA,WAAA,CAAa;QACb,UAAA,GAAA,KAAA,CAAO;IAGnB,CAAC;IACL;;OAEG;IACH,QAHK;QAIG,IAAI,CAHC,YAAC,GAAc,IAAA,CAAK,KAAC,CAAK,MAAC,CAAM,SAAC,CAAS,CAAC,MAAC,EAAO,EAAA;YAIrD,IAAI,CAHC,IAAC,CAAI,MAAC,CAAM,OAAC,CAAO,CAAC,CAAC;QAI/B,CAAC,CAHC,CAAC;IAIP,CAAC;IACL;;;OAGG;IACH,IANK,CAAA,KAAA;QAOG,IAAI,CANC,WAAC,CAAW,IAAC,CAAI,KAAC,CAAK,CAAC,SAAC,CAAS,CAAC,IAAC,EAAK,EAAA;YAO1C,IAAI,CANC,IAAC,GAAM,IAAA,CAAK;QAOrB,CAAC,CANC,CAAC;IAOP,CAAC;IACL;;OAEG;IACH,WARK;QASG,IAAI,CARC,YAAC,CAAY,WAAC,EAAW,CAAE;IASpC,CAAC;;AANE,kCAAA,GAAoC;IAS3C,EARE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBASrB,QAAQ,EARE,sBAAA;gBASV,QAAQ,EARE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6CZ;aASD,EARC,EAAG;CASJ,CARC;AASF;;GAEG;AATF,sCAAA,GAAA,GAAA,EAAA,CAAA;IAWD,EAAC,IAAI,EAAE,WAAW,GAAG;IACrB,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,CAAC;AAGF;IACA,gBAAgB;IAChB,uBAAuB,CAAC,UAAU,CAAC;IACnC;;;OAGG;IACH,uBAAuB,CAAC,cAAc,CAAC;IACvC,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,IAAI,CAAC;IACvC,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC/C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC9C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,KAAK,CAAC;AACxC,CAAC","file":"user-management-detail.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Rx';\n\nimport { User, UserService } from '../../shared';\nexport class UserMgmtDetailComponent implements OnInit, OnDestroy {\n\n    user: User;\nprivate subscription: Subscription;\n/**\n * @param {?} userService\n * @param {?} route\n */\nconstructor(\nprivate userService: UserService,\nprivate route: ActivatedRoute\n    ) {\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.subscription = this.route.params.subscribe((params) => {\n            this.load(params['login']);\n        });\n    }\n/**\n * @param {?} login\n * @return {?}\n */\nload(login) {\n        this.userService.find(login).subscribe((user) => {\n            this.user = user;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'jhi-user-mgmt-detail',\n    template: `\n      <div *ngIf=\"user\">\n          <h2>\n              <span jhiTranslate=\"userManagement.detail.title\">User</span> [<b>{{user.login}}</b>]\n          </h2>\n          <dl class=\"row-md jh-entity-details\">\n              <dt><span jhiTranslate=\"userManagement.login\">Login</span></dt>\n              <dd>\n                  <span>{{user.login}}</span>\n                  <span class=\"badge badge-danger\" *ngIf=\"!user.activated\"\n                        jhiTranslate=\"userManagement.deactivated\">Deactivated</span>\n                  <span class=\"badge badge-success\" *ngIf=\"user.activated\"\n                        jhiTranslate=\"userManagement.activated\">Activated</span>\n              </dd>\n              <dt><span jhiTranslate=\"userManagement.firstName\">First Name</span></dt>\n              <dd>{{user.firstName}}</dd>\n              <dt><span jhiTranslate=\"userManagement.lastName\">Last Name</span></dt>\n              <dd>{{user.lastName}}</dd>\n              <dt><span jhiTranslate=\"userManagement.email\">Email</span></dt>\n              <dd>{{user.email}}</dd>\n              <dt><span jhiTranslate=\"userManagement.langKey\">Lang Key</span></dt>\n              <dd>{{user.langKey}}</dd>\n              <dt><span jhiTranslate=\"userManagement.createdBy\">Created By</span></dt>\n              <dd>{{user.createdBy}}</dd>\n              <dt><span jhiTranslate=\"userManagement.createdDate\">Created Date</span></dt>\n              <dd>{{user.createdDate | date:'dd/MM/yy HH:mm' }}</dd>\n              <dt><span jhiTranslate=\"userManagement.lastModifiedBy\">Last Modified By</span></dt>\n              <dd>{{user.lastModifiedBy}}</dd>\n              <dt><span jhiTranslate=\"userManagement.lastModifiedDate\">Last Modified Date</span></dt>\n              <dd>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</dd>\n              <dt><span jhiTranslate=\"userManagement.profiles\">Profiles</span></dt>\n              <dd>\n                  <ul class=\"list-unstyled\">\n                      <li *ngFor=\"let authority of user.authorities\">\n                          <span class=\"badge badge-info\">{{authority}}</span>\n                      </li>\n                  </ul>\n              </dd>\n          </dl>\n          <button type=\"submit\"\n                  routerLink=\"/user-management\"\n                  class=\"btn btn-info\">\n              <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n          </button>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UserService, },\n{type: ActivatedRoute, },\n];\n}\n\nfunction UserMgmtDetailComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nUserMgmtDetailComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUserMgmtDetailComponent.ctorParameters;\n/** @type {?} */\nUserMgmtDetailComponent.prototype.user;\n/** @type {?} */\nUserMgmtDetailComponent.prototype.subscription;\n/** @type {?} */\nUserMgmtDetailComponent.prototype.userService;\n/** @type {?} */\nUserMgmtDetailComponent.prototype.route;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}